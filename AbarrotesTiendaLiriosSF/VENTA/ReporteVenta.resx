<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="idRVenta.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Marca.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Tipo.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Costo.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Existencias.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NW/gun8DV3G+9UE/OmsAAAAASUVORK5CYII=
</value>
  </data>
</root>